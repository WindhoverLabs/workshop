<configuration xmlns="urn:hornetq"
               xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
               xsi:schemaLocation="urn:hornetq /schema/hornetq-configuration.xsd">

    <persistence-enabled>false</persistence-enabled>
    <security-enabled>true</security-enabled>
    <security-invalidation-interval>60000</security-invalidation-interval>
    <journal-type>NIO</journal-type>



    <management-notification-address>hornetq.notifications</management-notification-address>
    <!-- set these even when no clustering is activated to avoid warnings about security settings -->
    <cluster-user>HORNETQ.CLUSTER.ADMIN.USER</cluster-user>
    <cluster-password>uhchmPeLAcGdo</cluster-password>

    <!-- Connectors -->
    <connectors>
        <connector name="in-vm">
            <factory-class>org.hornetq.core.remoting.impl.invm.InVMConnectorFactory</factory-class>
        </connector>
        <connector name="netty">
            <factory-class>org.hornetq.core.remoting.impl.netty.NettyConnectorFactory</factory-class>
            <param key="host"  value="${hornetq.remoting.netty.host:0.0.0.0}"/>
            <param key="port"  value="${hornetq.remoting.netty.port:5445}"/>
        </connector>
    </connectors>

    <acceptors>
        <acceptor name="in-vm">
            <factory-class>org.hornetq.core.remoting.impl.invm.InVMAcceptorFactory</factory-class>
        </acceptor>
        <acceptor name="netty">
            <factory-class>org.hornetq.core.remoting.impl.netty.NettyAcceptorFactory</factory-class>
            <param key="host"  value="${hornetq.remoting.netty.host:0.0.0.0}"/>
            <param key="port"  value="${hornetq.remoting.netty.port:5445}"/>
            <param key="use-nio"  value="true"/>
        </acceptor>
    </acceptors>

    <address-settings>
        <!-- make sure that the deliveries to data addresses don't consume all the memory-->
        <address-setting match="tempDataAddress.#">
            <max-size-bytes>100000</max-size-bytes>
            <address-full-policy>BLOCK</address-full-policy>
        </address-setting>

        <!-- link info queues (TM/TC downlink/upling status) keep only the last value for each link-->
        <address-setting match="linkInfo">
            <last-value-queue>true</last-value-queue>
        </address-setting>

        <!-- channel info queues keep only the last value for each channel-->
        <address-setting match="channelInfo">
            <last-value-queue>true</last-value-queue>
        </address-setting>

        <!-- CommandQueue info queue keep only the last value for each command-->
        <address-setting match="cmdQueueInfo">
            <last-value-queue>true</last-value-queue>
        </address-setting>

    </address-settings>

    <remoting-interceptors>
        <class-name>org.yamcs.security.HornetQAuthInterceptor</class-name>
    </remoting-interceptors>

    <!-- Match an address, determine what roles are required for which queue action. -->
    <!-- The closest matched setting is used exclusively, no inheritance. -->
    <!-- Yamcs server internally has all roles. -->
    <security-settings>
        <security-setting match="#">
            <permission type="createNonDurableQueue" roles="Operator,Monitoring,Supervisor"/>
            <permission type="deleteNonDurableQueue" roles="Operator,Monitoring,Supervisor"/>
            <permission type="consume" roles="Operator,Monitoring,Supervisor,SPELL"/>
            <permission type="send" roles="Operator,Monitoring,Supervisor,SPELL"/>
        </security-setting>
    </security-settings>


</configuration>
